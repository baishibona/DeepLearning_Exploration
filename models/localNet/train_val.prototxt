name: "RfalExplo_local"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "data/exploration/explo_mean.binaryproto"
  }
  data_param {
    source: "data/exploration/explo_train_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "data/exploration/explo_mean.binaryproto"
  }
  data_param {
    source: "data/exploration/explo_val_lmdb"
    batch_size: 550
    backend: LMDB
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
convolution_param {
    num_output: 128
    pad: 4
    stride: 3
    kernel_size: 9
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
# layer {
#   name: "norm1"
#   type: "LRN"
#   bottom: "conv1"
#   top: "norm1"
#   lrn_param {
#     local_size: 5
#     alpha: 0.0001
#     beta: 0.75
#   }
# }
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Local"
  bottom: "pool1"
  top: "conv2"
local_param {
    num_output: 32
    pad: 2
    stride: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
# layer {
#   name: "norm2"
#   type: "LRN"
#   bottom: "conv2"
#   top: "norm2"
#   lrn_param {
#     local_size: 5
#     alpha: 0.0001
#     beta: 0.75
#   }
# }
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# layer 3
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
convolution_param {
    num_output: 64
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
# layer {
#   name: "norm3"
#   type: "LRN"
#   bottom: "conv3"
#   top: "norm3"
#   lrn_param {
#     local_size: 5
#     alpha: 0.0001
#     beta: 0.75
#   }
# }
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

# layer 4
# layer {
#   name: "conv4"
#   type: "Local"
#   bottom: "pool3"
#   top: "conv4"
# local_param {
#     num_output: 64
#     kernel_size: 5
#     stride: 2
#     weight_filler {
#       type: "gaussian"
#       std: 0.01
#     }
#   }
# }
# layer {
#   name: "relu4"
#   type: "ReLU"
#   bottom: "conv4"
#   top: "conv4"
# }
# # layer {
# #   name: "norm4"
# #   type: "LRN"
# #   bottom: "conv4"
# #   top: "norm4"
# #   lrn_param {
# #     local_size: 5
# #     alpha: 0.0001
# #     beta: 0.75
# #   }
# # }
# layer {
#   name: "pool4"
#   type: "Pooling"
#   bottom: "conv4"
#   top: "pool4"
#   pooling_param {
#     pool: MAX
#     kernel_size: 3
#     stride: 2
#   }
# }

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 36
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
# layer {
#   name: "loss"
#   type: "SoftmaxWithLoss"
#   bottom: "fc8"
#   bottom: "label"
#   top: "loss"
# }

layer {
  name: "pred"
  type: "Softmax"
  bottom: "fc8"
  top: "pred"
  # include {
  #   phase: TEST
  # }
}

# L2 Norm loss
layer {
  name: "loss"
  type: "HingeLoss"
  bottom: "pred"
  bottom: "label"
  top: "loss"
  hinge_loss_param {
    norm: L2
  }
}

layer {
  name: "pred1"
  type: "ArgMax"
  bottom: "fc8"
  top: "pred1"
  include {
    phase: TEST
  }
}
layer {
  name: "error"
  type: "EuclideanLoss"
  bottom: "label"
  bottom: "pred1"
  top: "loss_euc"
  include {
    phase: TEST
  }
}